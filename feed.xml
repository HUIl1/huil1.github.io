<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="https://huil1.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://huil1.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-12-13T19:43:46+09:00</updated><id>https://huil1.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design.
</subtitle><entry><title type="html">청소년 자살사고를 가장 잘 예측하는 방법은?</title><link href="https://huil1.github.io/blog/2022/redirect0/" rel="alternate" type="text/html" title="청소년 자살사고를 가장 잘 예측하는 방법은?" /><published>2022-12-11T10:00:00+09:00</published><updated>2022-12-11T10:00:00+09:00</updated><id>https://huil1.github.io/blog/2022/redirect0</id><content type="html" xml:base="https://huil1.github.io/blog/2022/redirect0/"><![CDATA[<h2 id="청소년-자살문제"><strong>청소년 자살문제?</strong></h2>

<p>통계청의 자료에 따르면 10-30대 사망원인 1위는 바로 자살이며 이는 OECD 국가 1위 수준이다. 자살과 관련하여 연간 6조 5천억원의 사회경제적 비용이 한국에서 발생하고 있으며, 보건복지부에 따르면 특히 청소년의 자살률이 2020년 전년 대비 9.2% 증가하여 크게 늘고 있는 추세이다. 청소년의 자살사고의 심각성이 대두된 만큼, 청소년이 현재, 그리고 앞으로 살아가면서 자살사고를 하고 실천으로 이어지지 않기 위한 예측과 예방이 필요하다. 이에 NIH에서 수집한 ABCD 데이터를 활용하여 청소년의 자살을 예측하는 방법을 구하고 이를 통한 예방법을 제시하려고 한다. 특히 접근성과 예측력을 동시에 확보할 수 있는 자살사고의 예측 방법을 찾아보고자 한다.</p>

<hr />

<h2 id="청소년-자살사고를-예측해보기"><strong>청소년 자살사고를 예측해보기</strong></h2>
<p>조별 모임에 앞서 개인별로 연구의 방향성을 제시해보고자 했다. 먼저 ABCD의 각 데이터의 자살사고와 연관된 선행연구들을 찾아보았다. Demographics는 자살사고에 상당히 관련되어 있지만 자살사고의 예측을 개선하는 효과는 적다고 나타났다. PRS과 CBCL의 경우에는 자살사고에 대한 예측력에 높은 영향력을 가지고 있다 <d-cite key="Peter2022draw"></d-cite> 고 하여 PRS와 CBCL에 집중하고자 하였다.<br />
<br />
또한 경제적인 비용과 검사의 신뢰도도 고려해야 하기에 모든 뇌 관련 검사를 진행하는 것은 바람직하다고 생각하지 않았지만 뇌 관련 데이터가 자살사고로 이어지는 매개변수의 역할을 한다고 생각하여 뇌 관련 데이터 중 하나를 선정하여 cross feature를 구성하였다. 아동들을 대상으로 검사를 진행하기에 비교적 어려운 task fMRI를 제외하였고, 뇌의 연결성보다는 구조적인 것을 보는 것이 더 간단명료하여 뇌 검사 중에 GM을 매개 변인으로 선정하였다. 따라서 ‘PRSxGM’, ‘CBCLxGM’의 조합의 cross feature를 제시하였다.<br />
<br />
제외된 뇌 검사인 task fMRI, WM의 변인을 포함하는 것과 포함하지 않는 두 가지의 모델을 구성하여 R을 이용하여 AutoML을 실행하였다. <br /></p>

<p><em>Model1=GM+WM_FA+fMRI+Demo+PRS+CBCL+PRSxGM+CBCLxGM</em>
<em>Model2=GM++Demo+PRS+CBCL+PRSxGM+CBCLxGM</em><br /></p>

<p>다음의 코드를 통해 crosss feature을 진행하였다.</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
</pre></td><td class="code"><pre><span class="n">names</span><span class="p">(</span><span class="n">abcd_PRS</span><span class="p">)</span>

<span class="n">PRS_names</span> <span class="o">&lt;-</span> <span class="n">names</span><span class="p">(</span><span class="n">abcd_PRS</span><span class="p">);</span> <span class="n">PRS_names_sel</span> <span class="o">&lt;-</span> <span class="n">c</span><span class="p">()</span>

<span class="k">for</span><span class="p">(</span><span class="n">name</span> <span class="n">in</span> <span class="n">PRS_names</span><span class="p">){</span>
  <span class="k">if</span><span class="p">(</span><span class="n">name</span> <span class="o">%</span><span class="n">in</span><span class="o">%</span> <span class="n">names</span><span class="p">(</span><span class="n">data_final</span><span class="p">)){</span>
    <span class="n">PRS_names_sel</span> <span class="o">&lt;-</span> <span class="n">append</span><span class="p">(</span><span class="n">PRS_names_sel</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="n">abcd_PRS_final</span> <span class="o">&lt;-</span> <span class="n">subset</span><span class="p">(</span><span class="n">data_final</span><span class="p">,</span> <span class="n">select</span><span class="o">=</span><span class="n">PRS_names_sel</span><span class="p">)</span>

<span class="n">names</span><span class="p">(</span><span class="n">abcd_brain_gm</span><span class="p">)</span>

<span class="n">brain_gm_names</span> <span class="o">&lt;-</span> <span class="n">names</span><span class="p">(</span><span class="n">abcd_brain_gm</span><span class="p">);</span> <span class="n">brain_gm_names_sel</span> <span class="o">&lt;-</span> <span class="n">c</span><span class="p">()</span>

<span class="k">for</span><span class="p">(</span><span class="n">name</span> <span class="n">in</span> <span class="n">brain_gm_names</span><span class="p">){</span>
  <span class="k">if</span><span class="p">(</span><span class="n">name</span> <span class="o">%</span><span class="n">in</span><span class="o">%</span> <span class="n">names</span><span class="p">(</span><span class="n">data_final</span><span class="p">)){</span>
    <span class="n">brain_gm_names_sel</span> <span class="o">&lt;-</span> <span class="n">append</span><span class="p">(</span><span class="n">brain_gm_names_sel</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="n">abcd_brain_gm_final</span> <span class="o">&lt;-</span> <span class="n">subset</span><span class="p">(</span><span class="n">data_final</span><span class="p">,</span> <span class="n">select</span><span class="o">=</span><span class="n">brain_gm_names_sel</span><span class="p">,</span> <span class="n">drop</span><span class="o">=</span><span class="n">TRUE</span><span class="p">)</span>

<span class="cp"># cross the PRS and brain_gm features
</span><span class="n">crossed_data</span> <span class="o">=</span> <span class="n">c</span><span class="p">()</span>

<span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="n">in</span> <span class="mi">1</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">abcd_PRS_final</span><span class="p">)){</span>
  <span class="k">for</span><span class="p">(</span><span class="n">j</span> <span class="n">in</span> <span class="mi">1</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">abcd_brain_gm_final</span><span class="p">)){</span>
    <span class="n">crossed_feature</span> <span class="o">&lt;-</span> <span class="n">abcd_PRS_final</span><span class="p">[,</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">abcd_brain_gm_final</span><span class="p">[,</span><span class="n">j</span><span class="p">]</span>
    <span class="n">crossed_data</span> <span class="o">&lt;-</span> <span class="n">cbind</span><span class="p">(</span><span class="n">crossed_data</span><span class="p">,</span> <span class="n">crossed_feature</span><span class="p">)</span>

    <span class="n">crossed_data</span> <span class="o">&lt;-</span> <span class="n">as</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">frame</span><span class="p">(</span><span class="n">crossed_data</span><span class="p">)</span>
    <span class="n">name</span> <span class="o">&lt;-</span> <span class="n">paste</span><span class="p">(</span><span class="n">names</span><span class="p">(</span><span class="n">abcd_PRS_final</span><span class="p">)[</span><span class="n">i</span><span class="p">],</span> <span class="n">names</span><span class="p">(</span><span class="n">abcd_brain_gm_final</span><span class="p">)[</span><span class="n">j</span><span class="p">],</span> <span class="n">sep</span><span class="o">=</span><span class="sc">'_'</span><span class="p">)</span>
    <span class="n">colnames</span><span class="p">(</span><span class="n">crossed_data</span><span class="p">)[</span><span class="n">which</span><span class="p">(</span><span class="n">names</span><span class="p">(</span><span class="n">crossed_data</span><span class="p">)</span> <span class="o">==</span> <span class="err">'</span><span class="n">crossed_feature</span><span class="err">'</span><span class="p">)]</span> <span class="o">&lt;-</span> <span class="n">name</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="n">names</span><span class="p">(</span><span class="n">abcd_cbcl</span><span class="p">)</span>

<span class="n">cbcl_names</span> <span class="o">&lt;-</span> <span class="n">names</span><span class="p">(</span><span class="n">abcd_cbcl</span><span class="p">);</span> <span class="n">cbcl_names_sel</span> <span class="o">&lt;-</span> <span class="n">c</span><span class="p">()</span>

<span class="k">for</span><span class="p">(</span><span class="n">name</span> <span class="n">in</span> <span class="n">cbcl_names</span><span class="p">){</span>
  <span class="k">if</span><span class="p">(</span><span class="n">name</span> <span class="o">%</span><span class="n">in</span><span class="o">%</span> <span class="n">names</span><span class="p">(</span><span class="n">data_final</span><span class="p">)){</span>
    <span class="n">cbcl_names_sel</span> <span class="o">&lt;-</span> <span class="n">append</span><span class="p">(</span><span class="n">cbcl_names_sel</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="n">abcd_cbcl_final</span> <span class="o">&lt;-</span> <span class="n">subset</span><span class="p">(</span><span class="n">data_final</span><span class="p">,</span> <span class="n">select</span><span class="o">=</span><span class="n">cbcl_names_sel</span><span class="p">)</span>

<span class="n">crossed_data_2</span> <span class="o">=</span> <span class="n">c</span><span class="p">()</span>

<span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="n">in</span> <span class="mi">1</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">abcd_cbcl_final</span><span class="p">)){</span>
  <span class="k">for</span><span class="p">(</span><span class="n">j</span> <span class="n">in</span> <span class="mi">1</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">abcd_brain_gm_final</span><span class="p">)){</span>
    <span class="n">crossed_feature_2</span> <span class="o">&lt;-</span> <span class="n">as</span><span class="p">.</span><span class="n">numeric</span><span class="p">(</span><span class="n">abcd_cbcl_final</span><span class="p">[,</span><span class="n">i</span><span class="p">])</span> <span class="o">*</span> <span class="n">abcd_brain_gm_final</span><span class="p">[,</span><span class="n">j</span><span class="p">]</span>
    <span class="n">crossed_data_2</span> <span class="o">&lt;-</span> <span class="n">cbind</span><span class="p">(</span><span class="n">crossed_data_2</span><span class="p">,</span> <span class="n">crossed_feature_2</span><span class="p">)</span>

    <span class="n">crossed_data_2</span> <span class="o">&lt;-</span> <span class="n">as</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">frame</span><span class="p">(</span><span class="n">crossed_data_2</span><span class="p">)</span>
    <span class="n">name</span> <span class="o">&lt;-</span> <span class="n">paste</span><span class="p">(</span><span class="n">names</span><span class="p">(</span><span class="n">abcd_cbcl_final</span><span class="p">)[</span><span class="n">i</span><span class="p">],</span> <span class="n">names</span><span class="p">(</span><span class="n">abcd_brain_gm_final</span><span class="p">)[</span><span class="n">j</span><span class="p">],</span> <span class="n">sep</span><span class="o">=</span><span class="sc">'_'</span><span class="p">)</span>
    <span class="n">colnames</span><span class="p">(</span><span class="n">crossed_data_2</span><span class="p">)[</span><span class="n">which</span><span class="p">(</span><span class="n">names</span><span class="p">(</span><span class="n">crossed_data_2</span><span class="p">)</span> <span class="o">==</span> <span class="err">'</span><span class="n">crossed_feature_2</span><span class="err">'</span><span class="p">)]</span> <span class="o">&lt;-</span> <span class="n">name</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="cp"># add the crossed features to the preprocessed data
</span><span class="n">data_final_crossed</span> <span class="o">&lt;-</span> <span class="n">data</span><span class="p">.</span><span class="n">frame</span><span class="p">(</span><span class="n">data_final</span><span class="p">,</span> <span class="n">crossed_data</span><span class="p">,</span> <span class="n">crossed_data_2</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>데이터양이 상당하여 x_significant를 구해서 AutoML을 실행하였고, 구해진 x_significant에 나이와 성별이 포함되지 않아서 다음의 코드를 이용하여 포함시켰다.<br /></p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="n">x_significant</span> <span class="o">&lt;-</span> <span class="n">append</span><span class="p">(</span><span class="err">'</span><span class="n">sex_male</span><span class="err">'</span><span class="p">,</span> <span class="n">x_significant</span><span class="p">)</span>
<span class="n">x_significant</span> <span class="o">&lt;-</span> <span class="n">append</span><span class="p">(</span><span class="err">'</span><span class="n">sex_female</span><span class="err">'</span><span class="p">,</span> <span class="n">x_significant</span><span class="p">)</span>
<span class="n">x_significant</span> <span class="o">&lt;-</span> <span class="n">append</span><span class="p">(</span><span class="err">'</span><span class="n">age</span><span class="err">'</span><span class="p">,</span> <span class="n">x_significant</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>이 외에는 수업시간에 사용한 코드와 동일한 코드를 이용하여 다음과 같은 결과를 얻었다.<br /></p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/image8-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/image8-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/image8-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/image8.jpg" data-zoomable="" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/image9-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/image9-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/image9-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/image9.jpg" data-zoomable="" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/image10-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/image10-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/image10-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/image10.jpg" data-zoomable="" />

  </picture>

</figure>

    </div>
</div>
<div class="caption">
    두 모델의 결과가 비슷하여 Model1의 결과만 제시한다.
</div>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Model</th>
      <th style="text-align: center">AUC</th>
      <th style="text-align: center">Leader Model</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0.9473587</td>
      <td style="text-align: center">GLM_1_AutoML_2_20221129_231929</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">0.9498703</td>
      <td style="text-align: center">GLM_1_AutoML_3_20221130_212018</td>
    </tr>
  </tbody>
</table>

<p><br />
x_significant가 대부분 CBCL의 변인들이었기에 x_significant를 가지고 AutoML을 실행한 결과의 수치가 높게 나오는데 영향을 미친 것으로 보인다.<br />
<br />
또한 cross feature를 제시하는 것도 좋지만 조합 선정도 어려운 상태이기도 하고 base line model과 venture model을 선정하는 것에도 어려움이 있기에 cross feature를 고려하지 않고 조합할 수 있는 경우의 수를 모두 돌려보고 기준에 따라 모델을 채택하는 것이 좋을 것 같다는 의견으로 수렴되었다.<br />
<br />
각 조원 별로 63가지의 조합을 나누어 AutoML을 수행한 뒤 각 모델의 성능 지표(AUC, 민감도, 특이도)를 기재한 테이블에서 다음과 같은 Flow Chart에 따라 모델을 배제하고 채택하였다.<br /></p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/image2-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/image2-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/image2-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/image2.jpg" data-zoomable="" />

  </picture>

</figure>

    </div>
</div>

<p>위에서와 다르게 모든 변인들의 영향을 확인하기 위해 x_significant를 사용하지 않고 다음의 코드처럼 x로 변환하여 AutoML을 실행하였다.<br /></p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="n">aml</span> <span class="o">&lt;-</span> <span class="n">h2o</span><span class="p">.</span><span class="n">automl</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">y</span><span class="p">,</span>
                  <span class="n">training_frame</span> <span class="o">=</span> <span class="n">train_h2o</span><span class="p">,</span>
                  <span class="n">max_models</span> <span class="o">=</span> <span class="mi">20</span><span class="p">,</span>
                  <span class="n">seed</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="n">fold_column</span> <span class="o">=</span> <span class="err">'</span><span class="n">fold_column</span><span class="err">'</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>민감도와 특이도에 집중하여, 예측의 정확성이 부각되는 모델로 민감도가 특이도보다 높은 모델, 그리고 좀 더 커버리지를 넓힐 수 있는 모델로 특이도가 민감도보다 높은 모델로 두 모델을 제시하며 민감도와 특이도 두 가지 중에 좀 더 초점을 맞추고자 하는 방안을 채택할 수 있도록 하였습니다. 민감도 모델로는 fMRI, Demographics, CBCL의 3개 조합 모델이, 특이도 모델로는 GM, CBCL의 2개 조합 모델이 채택되었다. 두 모델들의 성능은 다음과 같다.<br /></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center"> </th>
      <th style="text-align: center">사용된 검사</th>
      <th style="text-align: center"> </th>
      <th style="text-align: center"> </th>
      <th style="text-align: center">Train Data</th>
      <th style="text-align: center"> </th>
      <th style="text-align: center"> </th>
      <th style="text-align: center">Test Data</th>
      <th style="text-align: center"> </th>
      <th style="text-align: center">검사 수</th>
      <th style="text-align: center">검사비(원)</th>
      <th style="text-align: center">리더모델</th>
    </tr>
    <tr>
      <th style="text-align: center">환경</th>
      <th style="text-align: center">뇌</th>
      <th style="text-align: center">행동</th>
      <th style="text-align: center">AUC</th>
      <th style="text-align: center">민감도</th>
      <th style="text-align: center">특이도</th>
      <th style="text-align: center">AUC</th>
      <th style="text-align: center">민감도</th>
      <th style="text-align: center">특이도</th>
      <th style="text-align: center"> </th>
      <th style="text-align: center"> </th>
      <th style="text-align: center"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Demographic information</td>
      <td style="text-align: center">fMRI</td>
      <td style="text-align: center">CBCL</td>
      <td style="text-align: center">0.97168</td>
      <td style="text-align: center">0.97133</td>
      <td style="text-align: center">0.94995</td>
      <td style="text-align: center">0.9464</td>
      <td style="text-align: center">0.94915</td>
      <td style="text-align: center">0.93447</td>
      <td style="text-align: center">3</td>
      <td style="text-align: center">353,050</td>
      <td style="text-align: center">GLM</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: center">GM</td>
      <td style="text-align: center">CBCL</td>
      <td style="text-align: center">0.96416</td>
      <td style="text-align: center">0.94386</td>
      <td style="text-align: center">0.94753</td>
      <td style="text-align: center">0.96239</td>
      <td style="text-align: center">0.94309</td>
      <td style="text-align: center">0.94349</td>
      <td style="text-align: center">2</td>
      <td style="text-align: center">453,050</td>
      <td style="text-align: center">GLM</td>
    </tr>
  </tbody>
</table>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/image3-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/image3-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/image3-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/image3.jpg" data-zoomable="" />

  </picture>

</figure>

    </div>
</div>

<p>특히 두 모델 모두 뇌 관련 데이터가 하나 필요하며, CBCL, demographics의 경우에는 쉽게 얻을 수 있는 정보로 접근성과 예측력을 동시에 확보한 두 모델을 채택할 수 있었다.</p>

<hr />

<h2 id="청소년-자살-사고-예방-법-제안"><strong>청소년 자살 사고 예방 법 제안</strong></h2>
<p>스크리닝된 청소년들을 대상으로 다음과 같은 해결책을 제시한다. 우리나라의 정서상 또래들끼리 낙인에 민감한 편으로, 따로 외부의 기관을 이용하기 보다는 학교 내부에서 최대한 해결이 될 수 있는 방안을 제시하였다.<br /></p>

<p>현재 Wee클래스 전문 심리상담사는 전국 6,129개교 중 1,128명으로 한 학교에 1명도 없어 부족한 실정인데, 이에 적어도 한 학년당 2-3명씩의 상담 교사를 배치할 것을 제안한다. 추가적으로 필요한 상담교사에 대한 비용 약 2조 7174억원의 추가 비용이 더 들 것이다. <br /></p>

<p>또한 공교육을 받지 않는 학생들은 Wee 클래스를 이용할 수 없으므로 이 학생들을 위해 보건소에 청소년 자살방지 담당 상담사를 2명씩 배치할 것을 제안한다. 청소년자살방지만을 전담하여 관리할 수 있는 상담사를 배치하는 약 979억원의 추가 비용이 필요하다. 즉 민감도 모델의 경우는 총 연간 예산안이 약 3조 6506억원, 특이도 모델의 경우에는 약 3조 8871억원이 필요한데, 이는 한국의 자살에 대한 사회적 비용인 6조5천억원의 절반 정도에 해당한다.<br /></p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/image4-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/image4-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/image4-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/image4.jpg" data-zoomable="" />

  </picture>

</figure>

    </div>
</div>

<p>또한 더 많은 연구를 통해서 해당 프로세스를 더 발전시킬 수 있을 것입니다. 뇌 데이터를 더 활용하여 자살 임박 청소년을 2차적으로 스크리닝하여 집중 클리닉을 한다면 더 좋은 예방으로 이어질 것이다.<br /></p>

<p>ABCD 데이터를 모두 사용한다고 해서 결코 좋은 예측이 되는 것은 아니다. 그러나 다양한 modality를 잘 조합한다면 예측력을 높일 수 있다. 특히 CBCL의 경우에는 그 자체만으로도 높은 예측력을 보였는데, 민감도와 타당도가 낮다는 점에서 독자적으로 사용되기는 어려웠다. 그러나 다른 데이터들과 결합되었을 때 뛰어난 성능을 보였다. 이러한 점에서 적은 수의 검사를 가지고도 높은 예측력을 얻을 수 있었던 것을 자살사고에 대한 설명의 타당성이 뛰어난 level의 존재 가능성을 나타낸다는 점을 함의하고 있다.
***</p>

<h2 id="reference"><strong>Reference</strong></h2>
<ul>
  <li>Hill SY, Jones BL, Haas GL. Suicidal ideation and aggression in childhood, genetic variation and young adult depression. J Affect Disord. 2020 Nov 1;276:954-962. doi: 10.1016/j.jad.2020.07.049. Epub 2020 Jul 24. PMID: 32745832; PMCID: PMC7484359.</li>
  <li>Huang X, Ribeiro JD, Musacchio KM, Franklin JC. Demographics as predictors of suicidal thoughts and behaviors: A meta-analysis. PLoS One. 2017 Jul 10;12(7):e0180793. doi: 10.1371/journal.pone.0180793. PMID: 28700728; PMCID: PMC5507259.</li>
  <li>Na, P.J., De Angelis, F., Nichter, B. et al. Psychosocial moderators of polygenic risk for suicidal ideation: Results from a 7-year population-based, prospective cohort study of U.S. veterans. Mol Psychiatry 27, 1068–1074 (2022). https://doi.org/10.1038/s41380-021-01352-2</li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[청소년 자살문제?]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://huil1.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog" /><published>2022-04-24T08:20:09+09:00</published><updated>2022-04-24T08:20:09+09:00</updated><id>https://huil1.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://huil1.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">TEST</title><link href="https://huil1.github.io/blog/2022/redirect/" rel="alternate" type="text/html" title="TEST" /><published>2022-02-01T18:00:00+09:00</published><updated>2022-02-01T18:00:00+09:00</updated><id>https://huil1.github.io/blog/2022/redirect</id><content type="html" xml:base="https://huil1.github.io/blog/2022/redirect/"><![CDATA[<h2 id="intro"><strong>intro</strong></h2>

<hr />
<h2 id="content"><strong>content</strong></h2>

<hr />
<h2 id="result"><strong>result</strong></h2>

<hr />]]></content><author><name></name></author><summary type="html"><![CDATA[intro]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://huil1.github.io/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams" /><published>2021-07-05T02:39:00+09:00</published><updated>2021-07-05T02:39:00+09:00</updated><id>https://huil1.github.io/blog/2021/diagrams</id><content type="html" xml:base="https://huil1.github.io/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin.
Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p>

<p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine.
Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW.
For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p>

<h2 id="mermaid">Mermaid</h2>

<p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div>

<p>The diagram below was generated by the following code:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div>

<div class="jekyll-diagrams diagrams mermaid">
  Command Not Found: mmdc
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://huil1.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post" /><published>2021-05-22T00:00:00+09:00</published><updated>2021-05-22T00:00:00+09:00</updated><id>https://huil1.github.io/blog/2021/distill</id><content type="html" xml:base="https://huil1.github.io/blog/2021/distill/"><![CDATA[<p><strong>NOTE:</strong>
Citations, footnotes, and code blocks do not display correctly in the dark mode since distill does not support the dark mode by default.
If you are interested in correctly adding dark mode support for distill, please open <a href="https://github.com/alshedivat/al-folio/discussions">a discussion</a> and let us know.</p>

<h2 id="equations">Equations</h2>

<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine.
You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>.
If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph.
Here is an example:</p>

\[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\]

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>

<hr />

<h2 id="citations">Citations</h2>

<p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag.
The key attribute is a reference to the id provided in the bibliography.
The key attribute can take multiple ids, separated by commas.</p>

<p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover).
If you have an appendix, a bibliography is automatically created and populated in it.</p>

<p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover.
However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p>

<hr />

<h2 id="footnotes">Footnotes</h2>

<p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag.
The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p>

<hr />

<h2 id="code-blocks">Code Blocks</h2>

<p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags.
An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>.
For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p>

<d-code block="" language="javascript">
  var x = 25;
  function(x) {
    return x * x;
  }
</d-code>

<p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look well in the dark mode.
You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<hr />

<h2 id="layouts">Layouts</h2>

<p>The main text column is referred to as the body.
It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p>

<div class="fake-img l-body">
  <p>.l-body</p>
</div>

<p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p>

<div class="fake-img l-page">
  <p>.l-page</p>
</div>

<p>All of these have an outset variant if you want to poke out from the body text a little bit.
For instance:</p>

<div class="fake-img l-body-outset">
  <p>.l-body-outset</p>
</div>

<div class="fake-img l-page-outset">
  <p>.l-page-outset</p>
</div>

<p>Occasionally you’ll want to use the full browser width.
For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>.
You can also inset the element a little from the edge of the browser by using the inset variant.</p>

<div class="fake-img l-screen">
  <p>.l-screen</p>
</div>
<div class="fake-img l-screen-inset">
  <p>.l-screen-inset</p>
</div>

<p>The final layout is for marginalia, asides, and footnotes.
It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p>

<div class="fake-img l-gutter">
  <p>.l-gutter</p>
</div>

<hr />

<h2 id="other-typography">Other Typography?</h2>

<p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p>

<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>

<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>

<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>

<ol>
  <li>First ordered list item</li>
  <li>Another item
⋅⋅* Unordered sub-list.</li>
  <li>Actual numbers don’t matter, just that it’s a number
⋅⋅1. Ordered sub-list</li>
  <li>And another item.</li>
</ol>

<p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>

<p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>

<ul>
  <li>Unordered list can use asterisks</li>
  <li>Or minuses</li>
  <li>Or pluses</li>
</ul>

<p><a href="https://www.google.com">I’m an inline-style link</a></p>

<p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p>

<p><a href="https://www.mozilla.org">I’m a reference-style link</a></p>

<p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p>

<p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p>

<p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p>

<p>URLs and URLs in angle brackets will automatically get turned into links. 
http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes 
example.com (but not on Github, for example).</p>

<p>Some text to show that the reference links can follow later.</p>

<p>Here’s our logo (hover to see the title text):</p>

<p>Inline-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1" /></p>

<p>Reference-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2" /></p>

<p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="s">"Python syntax highlighting"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting. 
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div>

<p>Colons can be used to align columns.</p>

<table>
  <thead>
    <tr>
      <th>Tables</th>
      <th style="text-align: center">Are</th>
      <th style="text-align: right">Cool</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>col 3 is</td>
      <td style="text-align: center">right-aligned</td>
      <td style="text-align: right">$1600</td>
    </tr>
    <tr>
      <td>col 2 is</td>
      <td style="text-align: center">centered</td>
      <td style="text-align: right">$12</td>
    </tr>
    <tr>
      <td>zebra stripes</td>
      <td style="text-align: center">are neat</td>
      <td style="text-align: right">$1</td>
    </tr>
  </tbody>
</table>

<p>There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don’t need to make the 
raw Markdown line up prettily. You can also use inline Markdown.</p>

<table>
  <thead>
    <tr>
      <th>Markdown</th>
      <th>Less</th>
      <th>Pretty</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><em>Still</em></td>
      <td><code class="language-plaintext highlighter-rouge">renders</code></td>
      <td><strong>nicely</strong></td>
    </tr>
    <tr>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Blockquotes are very handy in email to emulate reply text.
This line is part of the same quote.</p>
</blockquote>

<p>Quote break.</p>

<blockquote>
  <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>
</blockquote>

<p>Here’s a line for us to start with.</p>

<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>

<p>This line is also a separate paragraph, but…
This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://huil1.github.io/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata" /><published>2020-09-29T06:01:00+09:00</published><updated>2020-09-29T06:01:00+09:00</updated><id>https://huil1.github.io/blog/2020/github-metadata</id><content type="html" xml:base="https://huil1.github.io/blog/2020/github-metadata/"><![CDATA[<p>A sample blog page that demonstrates the accessing of github meta data.</p>

<h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2>
<ul>
  <li>Propagates the site.github namespace with repository metadata</li>
  <li>Setting site variables :
    <ul>
      <li>site.title</li>
      <li>site.description</li>
      <li>site.url</li>
      <li>site.baseurl</li>
    </ul>
  </li>
  <li>Accessing the metadata - duh.</li>
  <li>Generating edittable links.</li>
</ul>

<h2 id="additional-reading">Additional Reading</h2>
<ul>
  <li>If you’re recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li>
  <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li>
  <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata.
<br /></li>
</ul>

<h2 id="example-metadata">Example MetaData</h2>
<ul>
  <li>Host Name :</li>
  <li>URL :</li>
  <li>BaseURL :</li>
  <li>Archived :</li>
  <li>Contributors :</li>
</ul>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with twitter</title><link href="https://huil1.github.io/blog/2020/twitter/" rel="alternate" type="text/html" title="a post with twitter" /><published>2020-09-29T00:12:00+09:00</published><updated>2020-09-29T00:12:00+09:00</updated><id>https://huil1.github.io/blog/2020/twitter</id><content type="html" xml:base="https://huil1.github.io/blog/2020/twitter/"><![CDATA[<p>A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p>

<h1 id="tweet">Tweet</h1>
<p>An example of displaying a tweet:</p>
<div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="timeline">Timeline</h1>
<p>An example of pulling from a timeline:</p>
<div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="additional-details">Additional Details</h1>
<p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a></p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><category term="formatting" /><summary type="html"><![CDATA[an example of a blog post with twitter]]></summary></entry><entry><title type="html">a post with comments</title><link href="https://huil1.github.io/blog/2015/comments/" rel="alternate" type="text/html" title="a post with comments" /><published>2015-10-21T00:59:00+09:00</published><updated>2015-10-21T00:59:00+09:00</updated><id>https://huil1.github.io/blog/2015/comments</id><content type="html" xml:base="https://huil1.github.io/blog/2015/comments/"><![CDATA[<p>This post shows how to add DISQUS comments.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[an example of a blog post with comments]]></summary></entry><entry><title type="html">a post with math</title><link href="https://huil1.github.io/blog/2015/math/" rel="alternate" type="text/html" title="a post with math" /><published>2015-10-21T00:12:00+09:00</published><updated>2015-10-21T00:12:00+09:00</updated><id>https://huil1.github.io/blog/2015/math</id><content type="html" xml:base="https://huil1.github.io/blog/2015/math/"><![CDATA[<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p>

\[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\]

<p>You can also use <code class="language-plaintext highlighter-rouge">\begin{equation}...\end{equation}</code> instead of <code class="language-plaintext highlighter-rouge">$$</code> for display mode math.
MathJax will automatically number equations:</p>

<p>\begin{equation}
\label{eq:cauchy-schwarz}
\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)
\end{equation}</p>

<p>and by adding <code class="language-plaintext highlighter-rouge">\label{...}</code> inside the equation environment, we can now refer to the equation using <code class="language-plaintext highlighter-rouge">\eqref</code>.</p>

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="math" /><summary type="html"><![CDATA[an example of a blog post with some math]]></summary></entry><entry><title type="html">a post with code</title><link href="https://huil1.github.io/blog/2015/code/" rel="alternate" type="text/html" title="a post with code" /><published>2015-07-16T00:09:00+09:00</published><updated>2015-07-16T00:09:00+09:00</updated><id>https://huil1.github.io/blog/2015/code</id><content type="html" xml:base="https://huil1.github.io/blog/2015/code/"><![CDATA[<p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting.
It supports more than 100 languages.
This example is in C++.
All you have to do is wrap your code in a liquid tag:</p>

<p>{% highlight c++ linenos %}  <br /> code code code <br /> {% endhighlight %}</p>

<p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers.
Produces something like this:</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="code" /><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry></feed>